//editor "scroll(-715.68,-2433.88)|zoom(0.33)"
FlowGraphTemplate
{
	version "8"
	editor "6276"
	GraphNodes
	{
		LuaBehaviourNode
		{
			//editor "layout(event_start.xml)|pos(-3495,-1619)"
			database
			{
				Integers
				{
					IntData
					{
						key "rule_headquarters_survive"
						value "1"
					}

				}

			}

			script "lua/graph/mission_state/event_start.lua"
			self_id "default"
		}

		EndFlowGraphNode
		{
			//editor "layout(event_end.xml)|pos(3202,-1602)"
			script "lua/graph/mission_state/event_end.lua"
			self_id "event_end_0"
		}

		NodeSelectorNode
		{
			//editor "layout(logic_if_difficulty_wave.xml)|pos(-253,193)"
			script "lua/graph/logic/logic_if_difficulty_wave.lua"
			self_id "logic_if_difficulty_wave_1"
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-253,273)"
			key "easy"
			self_id "logic_if_difficulty_wave_1###easy"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-253,301)"
			key "normal"
			self_id "logic_if_difficulty_wave_1###normal"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-253,329)"
			key "hard"
			self_id "logic_if_difficulty_wave_1###hard"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-253,357)"
			key "brutal"
			self_id "logic_if_difficulty_wave_1###brutal"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-253,385)"
			key "sandbox"
			self_id "logic_if_difficulty_wave_1###sandbox"
			value
		}

		LuaBehaviourNode
		{
			//editor "layout(logic_and.xml)|pos(616,1828)"
			script "lua/graph/logic/logic_and.lua"
			self_id "logic_and_1"
		}

		OrBehaviourNode
		{
			//editor "layout(logic_or.xml)|pos(1531,559)"
			self_id "logic_or_1"
		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(483,-1121)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "50"
			self_id "wave_ground_1"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_ground.xml)|pos(0,0)"
					blueprint "units/ground/kermon"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "blueprint"
					units_in_one_spawn "15"
				}

			}

		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(480,-413)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "30"
			self_id "wave_ground_2"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_ground.xml)|pos(0,0)"
					blueprint "units/ground/kermon"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "blueprint"
					units_in_one_spawn "30"
				}

			}

		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(496,312)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "50"
			self_id "wave_ground_3"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_ground.xml)|pos(0,0)"
					blueprint "units/ground/kermon_alpha"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "blueprint"
					units_in_one_spawn "30"
				}

			}

		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(494,1029)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "50"
			self_id "wave_ground_4"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_ground.xml)|pos(0,0)"
					blueprint "units/ground/kermon_ultra"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "blueprint"
					units_in_one_spawn "30"
				}

			}

		}

		LuaBehaviourNode
		{
			//editor "layout(objective_generic.xml)|pos(-3105,-1691)"
			database
			{
				Integers
				{
					IntData
					{
						key "is_objective_local"
						value "1"
					}

					IntData
					{
						key "is_parent_local"
						value "1"
					}

					IntData
					{
						key "is_global"
						value "0"
					}

					IntData
					{
						key "generate_type"
						value "0"
					}

				}

				Strings
				{
					StringData
					{
						key "objective_blueprint"
						value
					}

					StringData
					{
						key "display_name"
						value "Warning! Cloaked enemy units approaching base perimiter!"
					}

					StringData
					{
						key "display_description"
					}

					StringData
					{
						key "unique_name_id"
						value "kermon_attack"
					}

					StringData
					{
						key "unique_parent_id_name"
						value
					}

					StringData
					{
						key "wait"
						value "false"
					}

				}

			}

			script "lua/graph/objective/objective_spawn.lua"
			self_id "objective_generic_1"
		}

		LuaBehaviourNode
		{
			//editor "layout(objective_finish.xml)|pos(2632,-1639)"
			database
			{
				Integers
				{
					IntData
					{
						key "is_objective_local"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "unique_name_id"
						value "kermon_attack"
					}

					StringData
					{
						key "success"
						value "true"
					}

				}

			}

			script "lua/graph/objective/objective_finish.lua"
			self_id "objective_finish_1"
		}

		DialogGroupNode
		{
			//editor "layout(interface_dialogue_show_group.xml)|pos(-2233,-1209)"
			global "0"
			interrupt "0"
			priority "-1"
			self_id "interface_dialogue_show_group_1"
			timeout "10"
			dialogs
			{
				//editor "expanded(1)"
				DialogInfo
				{
					//editor "layout(dialog_info.xml)|pos(0,0)"
					extended_duration "0"
					gui_id "gui/hud/dialogs/mech"
					sound_name "voice_over/generic/mech_attack_start_02"
				}

			}

		}

		LuaBehaviourNode
		{
			//editor "layout(logic_wait.xml)|pos(-2507,-1133)"
			database
			{
				Floats
				{
					FloatData
					{
						key "duration"
						value "3"
					}

				}

			}

			script "lua/graph/logic/logic_wait.lua"
			self_id "logic_wait_1"
		}

		LuaBehaviourNode
		{
			//editor "layout(audio_music_change_playlist.xml)|pos(-2137,-1935)"
			database
			{
				Strings
				{
					StringData
					{
						key "music_list"
						value "music/anticipation"
					}

				}

			}

			script "lua/graph/audio/audio_music_change_playlist.lua"
			self_id "audio_music_change_playlist_1"
		}

		LuaBehaviourNode
		{
			//editor "layout(audio_adaptive_music_system.xml)|pos(-2477,-1933)"
			database
			{
				Strings
				{
					StringData
					{
						key "status"
						value "false"
					}

				}

			}

			script "lua/graph/audio/audio_adaptive_music_system.lua"
			self_id "audio_adaptive_music_system_1"
		}

		LuaBehaviourNode
		{
			//editor "layout(audio_adaptive_music_system.xml)|pos(2637,-1884)"
			database
			{
				Strings
				{
					StringData
					{
						key "status"
						value "true"
					}

				}

			}

			script "lua/graph/audio/audio_adaptive_music_system.lua"
			self_id "audio_adaptive_music_system_2"
		}

		NodeSelectorNode
		{
			//editor "layout(logic_if_biome.xml)|pos(-1431,-1699)"
			database
			{
				Strings
				{
					StringData
					{
						key "biome"
						value "metallic"
					}

				}

			}

			script "lua/graph/logic/logic_if_biome.lua"
			self_id "logic_if_biome_1"
		}

		FlowGraphNode
		{
			//editor "layout(condition_true.xml)|pos(-1431,-1589)"
			key "true"
			self_id "logic_if_biome_1###true"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_false.xml)|pos(-1431,-1559)"
			key "false"
			self_id "logic_if_biome_1###false"
			value
		}

		OrBehaviourNode
		{
			//editor "layout(logic_or.xml)|pos(2175,-1618)"
			self_id "logic_or_2"
		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(432,-2979)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "50"
			self_id "wave_ground_5"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_species.xml)|pos(0,0)"
					blueprint "kermon_metallic"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "creature_species"
					units_in_one_spawn "30"
				}

			}

		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(432,-3692)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "50"
			self_id "wave_ground_6"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_species.xml)|pos(0,0)"
					blueprint "kermon_metallic"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "creature_species"
					units_in_one_spawn "20"
				}

			}

		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(435,-4404)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "30"
			self_id "wave_ground_7"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_species.xml)|pos(0,0)"
					blueprint "kermon_metallic"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "creature_species"
					units_in_one_spawn "20"
				}

			}

		}

		WaveGround
		{
			//editor "layout(wave_ground.xml)|pos(429,-5136)"
			database
			{
				Floats
				{
					FloatData
					{
						key "search_radius"
						value "0"
					}

					FloatData
					{
						key "search_min_radius"
						value "0"
					}

				}

				Integers
				{
					IntData
					{
						key "random_spawn"
						value "0"
					}

					IntData
					{
						key "spawn_indicator"
						value "0"
					}

					IntData
					{
						key "spawn_indicator_duration"
						value "45"
					}

					IntData
					{
						key "search_count"
						value "1"
					}

				}

				Strings
				{
					StringData
					{
						key "spawn_direction"
						value
					}

					StringData
					{
						key "target_name"
						value
					}

					StringData
					{
						key "spawn_type"
						value "RandomBorder"
					}

					StringData
					{
						key "target_type"
						value "Name"
					}

				}

			}

			delay "0"
			group_name "universal"
			percentage_units_to_end_wave "50"
			self_id "wave_ground_8"
			spawn_group
			spawn_point
			Enemies
			{
				//editor "expanded(1)"
				Enemy
				{
					//editor "layout(enemy_species.xml)|pos(0,0)"
					blueprint "kermon_metallic"
					count "3"
					delay "10"
					delay_group "0"
					spawn_type "creature_species"
					units_in_one_spawn "10"
				}

			}

		}

		OrBehaviourNode
		{
			//editor "layout(logic_or.xml)|pos(1527,-3545)"
			self_id "logic_or_3"
		}

		NodeSelectorNode
		{
			//editor "layout(logic_if_difficulty_wave.xml)|pos(-433,-3722)"
			script "lua/graph/logic/logic_if_difficulty_wave.lua"
			self_id "logic_if_difficulty_wave_2"
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-433,-3637)"
			key "easy"
			self_id "logic_if_difficulty_wave_2###easy"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-433,-3608)"
			key "normal"
			self_id "logic_if_difficulty_wave_2###normal"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-433,-3579)"
			key "hard"
			self_id "logic_if_difficulty_wave_2###hard"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-433,-3549)"
			key "brutal"
			self_id "logic_if_difficulty_wave_2###brutal"
			value
		}

		FlowGraphNode
		{
			//editor "layout(condition_difficulty.xml)|pos(-433,-3520)"
			key "sandbox"
			self_id "logic_if_difficulty_wave_2###sandbox"
			value
		}

		LuaBehaviourNode
		{
			//editor "layout(logic_and.xml)|pos(565,-2007)"
			script "lua/graph/logic/logic_and.lua"
			self_id "logic_and_2"
		}

	}

	GraphConnections
	{
		audio_adaptive_music_system_1 "audio_music_change_playlist_1"
		default "objective_generic_1"
		logic_and_1 "logic_or_1"
		logic_and_2 "logic_or_3"
		logic_if_biome_1 "logic_if_biome_1###false|logic_if_biome_1###true"
		logic_if_biome_1###false "logic_if_difficulty_wave_1"
		logic_if_biome_1###true "logic_if_difficulty_wave_2"
		logic_if_difficulty_wave_1 "logic_if_difficulty_wave_1###brutal|logic_if_difficulty_wave_1###easy|logic_if_difficulty_wave_1###hard|logic_if_difficulty_wave_1###normal|logic_if_difficulty_wave_1###sandbox"
		logic_if_difficulty_wave_1###brutal "wave_ground_4"
		logic_if_difficulty_wave_1###easy "wave_ground_1"
		logic_if_difficulty_wave_1###hard "wave_ground_3"
		logic_if_difficulty_wave_1###normal "wave_ground_2"
		logic_if_difficulty_wave_1###sandbox "logic_and_1"
		logic_if_difficulty_wave_2 "logic_if_difficulty_wave_2###brutal|logic_if_difficulty_wave_2###easy|logic_if_difficulty_wave_2###hard|logic_if_difficulty_wave_2###normal|logic_if_difficulty_wave_2###sandbox"
		logic_if_difficulty_wave_2###brutal "wave_ground_5"
		logic_if_difficulty_wave_2###easy "wave_ground_8"
		logic_if_difficulty_wave_2###hard "wave_ground_6"
		logic_if_difficulty_wave_2###normal "wave_ground_7"
		logic_if_difficulty_wave_2###sandbox "logic_and_2"
		logic_or_1 "logic_or_2"
		logic_or_2 "audio_adaptive_music_system_2|objective_finish_1"
		logic_or_3 "logic_or_2"
		logic_wait_1 "interface_dialogue_show_group_1"
		objective_finish_1 "event_end_0"
		objective_generic_1 "audio_adaptive_music_system_1|logic_if_biome_1|logic_wait_1"
		wave_ground_1 "logic_or_1"
		wave_ground_2 "logic_or_1"
		wave_ground_3 "logic_or_1"
		wave_ground_4 "logic_or_1"
		wave_ground_5 "logic_or_3"
		wave_ground_6 "logic_or_3"
		wave_ground_7 "logic_or_3"
		wave_ground_8 "logic_or_3"
	}

	GraphComments
}

